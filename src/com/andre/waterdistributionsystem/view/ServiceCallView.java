package com.andre.waterdistributionsystem.view;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JTextField;
import com.andre.waterdistributionsystem.controller.ServiceCallDAO;
import com.andre.waterdistributionsystem.dao.DataSource;
import com.andre.waterdistributionsystem.model.ServiceCall;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * @author Andre Luis Sabino
 * @version 1.3
 * @since 12/04/2017
 */
public class ServiceCallView extends javax.swing.JFrame {

    /**
     * Creates new form NewServiceCall
     */
    public ServiceCallView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveServiceCallButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        telephoneLabel = new javax.swing.JLabel();
        serviceLabel = new javax.swing.JLabel();
        openDateTimeLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        infoLabel = new javax.swing.JLabel();
        textFieldStatus = new javax.swing.JTextField();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        servicesCombo = new javax.swing.JComboBox<>();
        nameTextField = new javax.swing.JTextField();
        addressTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        telephoneTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        saveServiceCallButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        saveServiceCallButton.setText("Cadastrar Chamado");
        saveServiceCallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveServiceCallButtonActionPerformed(evt);
            }
        });

        closeButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        closeButton.setText("Sair");
        closeButton.setToolTipText("");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        nameLabel.setText("Nome: ");

        addressLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        addressLabel.setText("Endereço: ");

        emailLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        emailLabel.setText("E-mail:");

        telephoneLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        telephoneLabel.setText("Telefone:");

        serviceLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        serviceLabel.setText("Serviço Solicitado:");

        openDateTimeLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        openDateTimeLabel.setText("Data/Horario de Abertura:");

        infoLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        infoLabel.setText("Preencha abaixo os dados conforme contato do Cliente:");

        textFieldStatus.setEditable(false);
        textFieldStatus.setBackground(new java.awt.Color(204, 204, 204));
        textFieldStatus.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        textFieldStatus.setText("Aberto");
        textFieldStatus.setToolTipText("");
        textFieldStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldStatusActionPerformed(evt);
            }
        });

        jFormattedTextField1.setEditable(false);
        jFormattedTextField1.setBackground(new java.awt.Color(204, 204, 204));
        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss"))));
        jFormattedTextField1.setText(now());
        jFormattedTextField1.setToolTipText("");
        jFormattedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField1ActionPerformed(evt);
            }
        });

        servicesCombo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        servicesCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ligar Registro", "Verificação Interna", "Verificação Externa", "Verificação Rede( Agua )", "Verificação Rede( Esgoto )", "Manutenção Rede( Agua )", "Manutenção Rede( Esgoto )" }));

        nameTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        addressTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        emailTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        telephoneTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(telephoneLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(telephoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(openDateTimeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(textFieldStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(emailLabel)
                                .addGap(18, 18, 18)
                                .addComponent(emailTextField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(serviceLabel)
                                .addGap(18, 18, 18)
                                .addComponent(servicesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addressLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saveServiceCallButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(infoLabel)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(infoLabel)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel)
                    .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telephoneLabel)
                    .addComponent(telephoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serviceLabel)
                            .addComponent(servicesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(openDateTimeLabel)
                                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(textFieldStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveServiceCallButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        nameTextField.getAccessibleContext().setAccessibleName("Digite o nome do cliente...");
        nameTextField.getAccessibleContext().setAccessibleDescription("Digite o nome do cliente...");
        addressTextField.getAccessibleContext().setAccessibleName("Digite o endereço informado...");
        addressTextField.getAccessibleContext().setAccessibleDescription("Digite o endereço informado...");
        emailTextField.getAccessibleContext().setAccessibleName("Digite o e-mail do cliente...");
        emailTextField.getAccessibleContext().setAccessibleDescription("Digite o e-mail do cliente...");
        telephoneTextField.getAccessibleContext().setAccessibleName("Digite o telefone fo cliente");
        telephoneTextField.getAccessibleContext().setAccessibleDescription("Digite o telefone fo cliente");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*botão com a finalidade de inserir dados de um novo chamado no banco por meio do metodo insertServiceCall e limpando os campos após o mesmo */
    private void saveServiceCallButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveServiceCallButtonActionPerformed
        if(nameTextField.getText().isEmpty()||addressTextField.getText().isEmpty()
                ||emailTextField.getText().isEmpty()||telephoneTextField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Preencha o formulario corretamente");
        } else{
        ServiceCall serviceCall = new ServiceCall();
        serviceCall.setClientName(getNameTextField().getText());
        serviceCall.setClientAddress(getAddressTextField().getText());
        serviceCall.setClientEmail(getEmailTextField().getText());
        serviceCall.setClientTelephone(getTelephoneTextField().getText());
        serviceCall.setServiceNeeded(getServicesCombo().getSelectedItem().toString());
        DataSource dataSource = new DataSource();
        ServiceCallDAO controlDao = new ServiceCallDAO(dataSource);
        controlDao.insertServiceCall(serviceCall);
        cleanTextField();
        }
        
 
        

    }//GEN-LAST:event_saveServiceCallButtonActionPerformed
    /*Implementação do botão para fechar a tela   */
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void textFieldStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldStatusActionPerformed

    }//GEN-LAST:event_textFieldStatusActionPerformed
    /*Utilização do metodo now() para atribuir valor ao campo jFormattedTextField onde deve retornar a data e hora local atual*/
    private void jFormattedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField1ActionPerformed
        jFormattedTextField1.setText(now());
    }//GEN-LAST:event_jFormattedTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServiceCallView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServiceCallView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServiceCallView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServiceCallView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServiceCallView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel nameLabel;
    public javax.swing.JTextField nameTextField;
    private javax.swing.JLabel openDateTimeLabel;
    private javax.swing.JButton saveServiceCallButton;
    private javax.swing.JLabel serviceLabel;
    private javax.swing.JComboBox<String> servicesCombo;
    private javax.swing.JLabel telephoneLabel;
    private javax.swing.JTextField telephoneTextField;
    private javax.swing.JTextField textFieldStatus;
    // End of variables declaration//GEN-END:variables
 /*constante criada para padronizar formato da data e hora*/
    public static final String DATEFORMAT = "yyyy-MM-dd HH:mm:ss";
 /*Implementação do metodo now() para atribuir valor ao campo jFormattedTextField onde deve retornar a data e hora local atual*/
    public String now() {
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat format = new SimpleDateFormat(DATEFORMAT);
        String s = (format.format(cal.getTime()));
        return s;
    }
 /*Metodo com a finalidade de limpar os TextFields da tela para um novo preenchimento e atualiza o valor da JFormattedTextField para a data e hora atualizada*/
    public void cleanTextField() {
        nameTextField.setText("");
        addressTextField.setText("");
        emailTextField.setText("");
        jFormattedTextField1.setText(now());
        telephoneTextField.setText("");
    }
     /*Metodos acessores, getters e setters*/

    public JTextField getNameTextField() {
        return nameTextField;
    }

    public JTextField getAddressTextField() {
        return addressTextField;
    }

    public JTextField getEmailTextField() {
        return emailTextField;
    }

    public JFormattedTextField getjFormattedTextField1() {
        return jFormattedTextField1;
    }

    public JComboBox<String> getServicesCombo() {
        return servicesCombo;
    }

    public JTextField getTelephoneTextField() {
        return telephoneTextField;
    }

}
